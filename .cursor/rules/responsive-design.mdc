---
globs: "*.tsx,*.jsx,*.ts,*.js"
description: "Responsive design patterns and mobile-first development rules for React components"
---

# Responsive Design & Mobile-First Development Rules

## üéØ Core Principles

### Always Build Mobile-First
- **Start with mobile layout** and progressively enhance for larger screens
- **Use Tailwind responsive prefixes**: `sm:`, `md:`, `lg:`, `xl:` for progressive enhancement
- **Default styles should work on mobile** without responsive prefixes

### Touch-Friendly Interface Requirements
- **Minimum 44px touch targets** for all interactive elements (buttons, links, inputs)
- **Add `touch-manipulation` CSS** to interactive elements for better touch response
- **Proper spacing** between clickable elements (minimum 8px gap)

```tsx
// ‚úÖ CORRECT - Touch-friendly button
<button className="px-6 py-3 min-h-[44px] touch-manipulation">
  Action
</button>

// ‚ùå WRONG - Too small for touch
<button className="px-2 py-1">Action</button>
```

## üì± Layout Patterns

### Container and Spacing
```tsx
// ‚úÖ CORRECT - Responsive container with appropriate padding
<div className="max-w-4xl mx-auto px-4 sm:px-6 py-6 sm:py-8">
  <div className="space-y-6 sm:space-y-8">
    {/* Content */}
  </div>
</div>
```

### Grid Layouts
```tsx
// ‚úÖ CORRECT - Responsive grid that stacks on mobile
<div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6">
  {/* Grid items */}
</div>
```

### Flexbox Layouts
```tsx
// ‚úÖ CORRECT - Responsive flex that stacks on mobile
<div className="flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4">
  {/* Flex items */}
</div>
```

## üî§ Typography Patterns

### Responsive Text Sizing
```tsx
// ‚úÖ CORRECT - Progressive text sizing
<h1 className="text-2xl sm:text-3xl lg:text-4xl font-bold">Title</h1>
<p className="text-sm sm:text-base text-gray-600">Description</p>

// ‚ùå WRONG - Fixed large text that may be too big on mobile
<h1 className="text-4xl font-bold">Title</h1>
```

### Text Content Adaptation
```tsx
// ‚úÖ CORRECT - Adaptive text content for different screen sizes
<span className="sm:hidden">Mobile Text</span>
<span className="hidden sm:inline">Desktop Text</span>

// Example: "+" vs "Create Activity"
<span className="sm:hidden">+</span>
<span className="hidden sm:inline">Create Activity</span>
```

## üéõÔ∏è Component-Specific Patterns

### Navigation Components
```tsx
// ‚úÖ CORRECT - Mobile-responsive navigation
const Navigation = () => {
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  
  return (
    <nav className="bg-white shadow-sm">
      <div className="max-w-7xl mx-auto px-4 sm:px-6">
        <div className="flex justify-between h-16">
          {/* Desktop navigation */}
          <div className="hidden md:flex space-x-8">
            {/* Nav items */}
          </div>
          
          {/* Mobile menu button */}
          <div className="md:hidden">
            <button
              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
              className="p-2"
              aria-label="Toggle navigation"
            >
              {/* Hamburger/close icon */}
            </button>
          </div>
        </div>
        
        {/* Mobile menu */}
        {isMobileMenuOpen && (
          <div className="md:hidden">
            {/* Mobile nav items */}
          </div>
        )}
      </div>
    </nav>
  );
};
```

### Modal Components
```tsx
// ‚úÖ CORRECT - Responsive modal
<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
  <div className="bg-white rounded-lg w-full max-w-md max-h-[90vh] overflow-y-auto p-4 sm:p-6">
    {/* Modal content */}
  </div>
</div>
```

### Form Components
```tsx
// ‚úÖ CORRECT - Responsive form layout
<form className="space-y-4">
  <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
    {/* Form fields */}
  </div>
  
  <div className="flex flex-col sm:flex-row space-y-3 sm:space-y-0 sm:space-x-3">
    <button className="flex-1 py-3 px-4 touch-manipulation">Submit</button>
    <button className="flex-1 py-3 px-4 touch-manipulation">Cancel</button>
  </div>
</form>
```

### Card/List Components
```tsx
// ‚úÖ CORRECT - Responsive card layout
<div className="bg-white rounded-lg shadow-lg p-4 sm:p-6">
  <div className="flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-3 lg:space-y-0">
    <div className="flex-1 min-w-0">
      <h3 className="text-base sm:text-lg font-medium truncate">Title</h3>
      <p className="text-sm text-gray-600 mt-1">Description</p>
    </div>
    
    <div className="flex items-center justify-between lg:justify-end lg:space-x-4">
      <div className="text-sm sm:text-base">Content</div>
      <div className="flex space-x-2">
        {/* Action buttons */}
      </div>
    </div>
  </div>
</div>
```

## üìã Form Input Best Practices

### Input Sizing
```tsx
// ‚úÖ CORRECT - Proper input sizing for mobile
<input
  type="text"
  className="w-full px-3 py-2 text-base border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
/>

// Note: text-base (16px) prevents zoom on iOS devices
```

### Button Layouts
```tsx
// ‚úÖ CORRECT - Responsive button layout
<div className="flex flex-col sm:flex-row space-y-3 sm:space-y-0 sm:space-x-3">
  <button className="flex-1 py-3 px-4 touch-manipulation">Primary</button>
  <button className="flex-1 py-3 px-4 touch-manipulation">Secondary</button>
</div>
```

## üé® Visual Hierarchy on Mobile

### Content Prioritization
```tsx
// ‚úÖ CORRECT - Hide less important content on mobile
<div className="flex items-center space-x-4">
  <span className="font-medium">Important Info</span>
  <span className="text-sm text-gray-500 hidden sm:inline">
    Less Important Details
  </span>
</div>
```

### Responsive Images/Icons
```tsx
// ‚úÖ CORRECT - Responsive icon/image sizing
<div className="text-4xl sm:text-6xl mb-4">üì±</div>
<img className="h-8 w-8 sm:h-12 sm:w-12" src="icon.svg" alt="Icon" />
```

## üîç Loading and Error States

### Responsive Loading States
```tsx
// ‚úÖ CORRECT - Responsive loading layout
if (isLoading) {
  return (
    <div className="max-w-4xl mx-auto px-4 sm:px-6 py-6 sm:py-8">
      <div className="text-center">
        <div className="animate-spin h-12 w-12 border-b-2 border-blue-600 mx-auto"></div>
        <p className="mt-4 text-sm sm:text-base text-gray-600">Loading...</p>
      </div>
    </div>
  );
}
```

## ‚ö†Ô∏è Common Mistakes to Avoid

### ‚ùå Fixed Layouts
```tsx
// ‚ùå WRONG - Fixed grid that doesn't adapt
<div className="grid grid-cols-3 gap-6">

// ‚úÖ CORRECT - Responsive grid
<div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6">
```

### ‚ùå Non-Touch-Friendly Elements
```tsx
// ‚ùå WRONG - Too small for touch
<button className="p-1 text-xs">Action</button>

// ‚úÖ CORRECT - Touch-friendly
<button className="p-2 text-sm touch-manipulation min-h-[44px]">Action</button>
```

### ‚ùå Overflow Issues
```tsx
// ‚ùå WRONG - Can cause horizontal scroll on mobile
<div className="flex space-x-8">
  <div className="min-w-[200px]">Content</div>

// ‚úÖ CORRECT - Flexible layout
<div className="flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4">
  <div className="flex-1 min-w-0">Content</div>
```

## üìè Breakpoint Strategy

### Tailwind Breakpoints Reference
- **Default (0px+)**: Mobile-first base styles
- **sm (640px+)**: Small tablets and large phones in landscape
- **md (768px+)**: Tablets and small laptops  
- **lg (1024px+)**: Laptops and desktops
- **xl (1280px+)**: Large desktops

### Progressive Enhancement Pattern
```tsx
// ‚úÖ CORRECT - Mobile ‚Üí Tablet ‚Üí Desktop progression
<div className="p-4 sm:p-6 lg:p-8">           // Padding
<h1 className="text-xl sm:text-2xl lg:text-3xl"> // Typography
<div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3"> // Layout
```

## üß™ Testing Checklist

Before considering a component complete, test:
- [ ] **Mobile (320px - 480px)**: Core functionality works
- [ ] **Tablet (768px - 1024px)**: Layout adapts appropriately  
- [ ] **Desktop (1024px+)**: Full feature set available
- [ ] **Touch interactions**: All buttons/links are easily tappable
- [ ] **Text readability**: No text too small on mobile
- [ ] **Horizontal scroll**: No unwanted horizontal scrolling
- [ ] **Content priority**: Most important content visible on mobile

## üéØ Implementation Priority

1. **Mobile Layout First** - Ensure it works on smallest screens
2. **Touch Targets** - Make all interactive elements touch-friendly
3. **Progressive Enhancement** - Add tablet and desktop improvements
4. **Content Adaptation** - Hide/show/resize content appropriately
5. **Performance** - Ensure fast loading on mobile networks

Remember: **If it works great on mobile, scaling up is easier than scaling down!**
